name: PHP Code Quality Checks

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint-and-test:
    name: 🧪 Test on PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.3']

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: Install required PHP extensions
        run: |
          sudo apt-get update
          sudo apt-get install -y php-pdo php-exif php-fileinfo php-mbstring php-mysqli php-intl php-gd

      - name: ⚙️ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo, exif, fileinfo, mbstring, mysqli, intl, gd, bcmath
          tools: composer:v2

      - name: 🔒 Verify composer.lock is up-to-date with composer.json
        run: |
          # Try to update only the lock metadata in CI; if composer.lock would change, fail the job with a helpful message
          composer update --lock --no-interaction --no-plugins || true
          if ! git diff --quiet -- composer.lock; then
            echo "❌ composer.lock is out of date with composer.json."
            echo "Run 'composer update' locally and commit the updated composer.lock."
            git --no-pager diff -- composer.lock
            exit 1
          fi

      - name: 📥 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock', '**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-

      - name: 🔍 Check required PHP extensions
        run: |
          for ext in pdo exif fileinfo mbstring mysqli intl gd; do
            php -m | grep -i $ext || (echo "❌ Missing extension: $ext" && exit 1)
          done

      - name: 📦 Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: ✅ PHP Syntax Lint
        run: find . -type f -name "*.php" ! -path "./vendor/*" -exec php -l {} \;

      - name: Make sure tests-results is there
        run: mkdir -p vendor/pestphp/pest/.temp | touch vendor/pestphp/pest/.temp/test-results

      - name: 🧪 Run Pest Tests
        run: vendor/bin/pest -c phpunit.xml